AWSTemplateFormatVersion: 2010-09-09
Description: AWS Config register delegated administrator account

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - 
        Label: 
          default: Lambda Function Attributes
        Parameters:
          - pLambdaFunctionName
          - pLambdaS3BucketName
          - pLambdaZipFileName
          - pDelegatedAdminAccountId
          - pLogLevel
          - pDefaultLogGroupRetention          
      -
        Label:
          default: Lambda Role Attributes
        Parameters:
          - pLambdaExecutionRoleName
          - pTagKey1
          - pTagValue1

    ParameterLabels:
      pLambdaFunctionName:
        default: Lambda Function Name
      pLambdaS3BucketName: 
        default: Lambda Source S3 Bucket Name
      pLambdaZipFileName: 
        default: Lambda Zip File Name
      pDelegatedAdminAccountId:
        default: AWS Config Delegated Admin Account ID
      pLogLevel: 
        default: Lambda Function Log Level
      pDefaultLogGroupRetention:
        default: Default Log Group Retention
      
      pLambdaExecutionRoleName: 
        default: Lambda Role Name
      pTagKey1:
        default: Tag Key
      pTagValue1:
        default: Tag Value

Parameters:
  pLambdaS3BucketName:
    Type: String
    AllowedPattern: "(^$|^([a-z]|(\\d(?!\\d{0,2}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})))([a-z\\d]|(\\.(?!(\\.|-)))|(-(?!\\.))){1,61}[a-z\\d]$)"
    Description: The Amazon S3 bucket name where the lambda zip file is stored.

  pLambdaZipFileName:
    Type: String
    Description: Lambda zip file containing code
    Default: aws-config-register-delegated-admin-v1.zip

  pLambdaFunctionName:
    Type: String
    Description: Lambda function name
    Default: config-register-delegated-admin

  pLambdaExecutionRoleName:
    Type: String
    Default: config-register-delegated-admin-lambda

  pDelegatedAdminAccountId:
    Type: String
    Description: AWS Config delegated administrator account ID

  pLogLevel:
    Type: String
    Default: info
    Description: Lambda Function Logging Level
    AllowedValues: 
      - info
      - warning
      - error
      - critical

  pTagKey1:
    Type: String 
    Description: Tag key
  
  pTagValue1:
    Type: String 
    Description: Tag key value

  pDefaultLogGroupRetention:
    Type: String
    Default: 14
    Description: Specifies the number of days you want to retain log events in the CloudWatch Logs
    AllowedValues: [1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, 3653]
  

Mappings:
  mAWSServicePrincipal:
    config:
      ServicePrincipal: config-multiaccountsetup.amazonaws.com


Resources: 
  rLambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: !Ref pDefaultLogGroupRetention
      LogGroupName: !Sub "/aws/lambda/${pLambdaFunctionName}"

  rLambdaRole:
    Type: AWS::IAM::Role
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W11
            reason: "The organizations actions do not allow resource restrictions"
          - id: W28
            reason: "The role name is defined to identify resources."
    Properties:
      RoleName: !Ref pLambdaExecutionRoleName
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Effect: Allow
          Principal:
            Service:
              - lambda.amazonaws.com
          Action:
            - sts:AssumeRole
      Path: "/"
      Policies:
      - PolicyName: "conformance-pack-org-policy-logs"
        PolicyDocument:
          Version: 2012-10-17
          Statement:
            - Sid: CreateLogGroup
              Effect: Allow
              Action:
                - logs:CreateLogGroup
              Resource: !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:${rLambdaLogGroup}

            - Sid: CreateLogStreamAndEvents
              Effect: Allow
              Action:
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource: !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:${rLambdaLogGroup}:log-stream:*

      - PolicyName: "conformance-pack-org-policy-organizations"
        PolicyDocument:
          Version: 2012-10-17
          Statement:
            - Sid: Organizations
              Effect: Allow
              Action:
                - organizations:DeregisterDelegatedAdministrator
                - organizations:DescribeOrganization
                - organizations:DisableAWSServiceAccess
                - organizations:EnableAWSServiceAccess
                - organizations:ListAWSServiceAccessForOrganization
                - organizations:ListDelegatedAdministrators
                - organizations:RegisterDelegatedAdministrator
              Resource: "*"
      Tags:
        - Key: !Ref pTagKey1
          Value: !Ref pTagValue1

  rLambdaFunction:
    Type: AWS::Lambda::Function
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W58
            reason: "CloudWatch access provided by the attached IAM role"
    Properties:
      Description: Update the S3 account level public access block settings
      FunctionName: !Ref pLambdaFunctionName
      Handler: "app.lambda_handler"
      MemorySize: 128
      Role: !GetAtt rLambdaRole.Arn
      Runtime: python3.8
      Timeout: 300
      Tags:
        - Key: !Ref pTagKey1
          Value: !Ref pTagValue1
      Environment:
        Variables:
          LOG_LEVEL: !Ref pLogLevel
          DELEGATED_ADMIN_ACCOUNT_ID: !Ref pDelegatedAdminAccountId
          AWS_SERVICE_PRINCIPAL: !FindInMap [mAWSServicePrincipal, "config", "ServicePrincipal"]
      Code:
        S3Bucket: !Ref pLambdaS3BucketName
        S3Key: !Ref pLambdaZipFileName
            
  rLambdaCustomResource:
    Type: Custom::LambdaCustomResource
    Version: "1.0"
    Properties:
      ServiceToken: !GetAtt rLambdaFunction.Arn