########################################################################
# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0
########################################################################
AWSTemplateFormatVersion: 2010-09-09
Description:
  This template creates Lambda function and associated resources to enable the S3 account level block public access settings -
  's3_block_account_public_access' solution in the repo, https://github.com/aws-samples/aws-security-reference-architecture-examples (sra-1ssgnse5t)

Metadata:
  SRA:
    Version: 1.1
    Order: 3
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: General Properties
        Parameters:
          - pOrganizationId
          - pSRASolutionName
          - pSRASSMParameterPrefix
          - pSRAStagingS3BucketName

      - Label:
          default: S3 Block Account Public Access - Lambda Function Properties
        Parameters:
          - pS3BlockAccountPublicAccessLambdaFunctionName
          - pS3BlockAccountPublicAccessLambdaRoleName

      - Label:
          default: Custom Resource Properties
        Parameters:
          - pEnableBlockPublicAcls
          - pEnableBlockPublicPolicy
          - pEnableIgnorePublicAcls
          - pEnableRestrictPublicBuckets
          - pS3BlockAccountPublicAccessRoleName

      - Label:
          default: General Lambda Function Properties
        Parameters:
          - pCreateLambdaLogGroup
          - pLambdaLogGroupRetention
          - pLambdaLogGroupKmsKey
          - pLambdaLogLevel

      - Label:
          default: S3 Block Account Public Access - EventBridge Rule Properties
        Parameters:
          - pControlTowerLifeCycleRuleName

    ParameterLabels:
      pControlTowerLifeCycleRuleName:
        default: Control Tower Lifecycle Rule Name
      pCreateLambdaLogGroup:
        default: Create Lambda Log Group
      pEnableBlockPublicAcls:
        default: S3 Enable Block Public ACLs
      pEnableBlockPublicPolicy:
        default: S3 Enable Block Public Policy
      pEnableIgnorePublicAcls:
        default: S3 Enable Ignore Public ACLs
      pEnableRestrictPublicBuckets:
        default: S3 Enable Restrict Public Buckets
      pLambdaLogGroupKmsKey:
        default: (Optional) Lambda Logs KMS Key
      pLambdaLogGroupRetention:
        default: Lambda Log Group Retention
      pLambdaLogLevel:
        default: Lambda Log Level
      pOrganizationId:
        default: Organization ID
      pS3BlockAccountPublicAccessLambdaFunctionName:
        default: Lambda Function Name
      pS3BlockAccountPublicAccessLambdaRoleName:
        default: Lambda Role Name
      pS3BlockAccountPublicAccessRoleName:
        default: S3 Enable Block Public Access Role Name
      pSRASolutionName:
        default: SRA Solution Name
      pSRASSMParameterPrefix:
        default: SRA SSM Parameter Prefix
      pSRAStagingS3BucketName:
        default: SRA Staging S3 Bucket Name

Parameters:
  pControlTowerLifeCycleRuleName:
    AllowedPattern: '^[\w.-]{1,64}$'
    ConstraintDescription: Max 64 alphanumeric and underscore characters. Also special characters supported [., -]
    Default: sra-s3-block-account-public-access-trigger
    Description: The name of the AWS Control Tower Life Cycle Rule.
    Type: String
  pCreateLambdaLogGroup:
    AllowedValues: ['true', 'false']
    Default: 'false'
    Description:
      Indicates whether a CloudWatch Log Group should be explicitly created for the Lambda function, to allow for setting a Log Retention and/or KMS
      Key for encryption.
    Type: String
  pEnableBlockPublicAcls:
    AllowedValues: ['true', 'false']
    Default: 'true'
    Description: S3 Enable Block Public ACLs
    Type: String
  pEnableBlockPublicPolicy:
    AllowedValues: ['true', 'false']
    Default: 'true'
    Description: S3 Enable Block Public Policy
    Type: String
  pEnableIgnorePublicAcls:
    AllowedValues: ['true', 'false']
    Default: 'true'
    Description: S3 Enable Ignore Public ACLs
    Type: String
  pEnableRestrictPublicBuckets:
    AllowedValues: ['true', 'false']
    Default: 'true'
    Description: S3 Enable Restrict Public Buckets
    Type: String
  pLambdaLogGroupKmsKey:
    AllowedPattern: '^$|^arn:(aws[a-zA-Z-]*){1}:kms:[a-z0-9-]+:\d{12}:key\/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$'
    ConstraintDescription: 'Key ARN example:  arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab'
    Default: ''
    Description:
      (Optional) KMS Key ARN to use for encrypting the Lambda logs data. If empty, encryption is enabled with CloudWatch Logs managing the server-side
      encryption keys.
    Type: String
  pLambdaLogLevel:
    AllowedValues: [DEBUG, INFO, ERROR]
    Default: INFO
    Description: Lambda Function Logging Level
    Type: String
  pLambdaLogGroupRetention:
    AllowedValues: [1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, 3653]
    Default: 14
    Description: Specifies the number of days you want to retain log events
    Type: String
  pOrganizationId:
    AllowedPattern: '^o-[a-z0-9]{10,32}$'
    ConstraintDescription: The Org Id must be a 12 character string starting with o- and followed by 10 lower case alphanumeric characters
    Description: AWS Organizations ID
    Type: String
  pS3BlockAccountPublicAccessLambdaFunctionName:
    AllowedPattern: '^[\w-]{0,64}$'
    ConstraintDescription: Max 64 alphanumeric characters. Also special characters supported [_, -]
    Default: sra-s3-block-account-public-access
    Description: Lambda function name
    Type: String
  pS3BlockAccountPublicAccessLambdaRoleName:
    AllowedPattern: '^[\w+=,.@-]{1,64}$'
    ConstraintDescription: Max 64 alphanumeric characters. Also special characters supported [+, =, ., @, -]
    Default: sra-s3-block-account-public-access-lambda
    Description: Lambda execution role
    Type: String
  pS3BlockAccountPublicAccessRoleName:
    AllowedPattern: '^[\w+=,.@-]{1,64}$'
    ConstraintDescription: Max 64 alphanumeric characters. Also special characters supported [+, =, ., @, -]
    Default: sra-s3-block-account-public-access
    Description: S3 Enable Block Public Access Role Name
    Type: String
  pSRASolutionName:
    AllowedValues: [sra-s3-block-account-public-access]
    Default: sra-s3-block-account-public-access
    Description: The SRA solution name. The default value is the folder name of the solution
    Type: String
  pSRASSMParameterPrefix:
    AllowedValues: ['/sra/s3-block-account-public-access']
    Default: '/sra/s3-block-account-public-access'
    Description: SRA SSM parameter prefix to use for storing the configuration properties needed when a new account is created.
    Type: String
  pSRAStagingS3BucketName:
    AllowedPattern: '^(?=^.{3,63}$)(?!.*[.-]{2})(?!.*[--]{2})(?!^(?:(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])(\.(?!$)|$)){4}$)(^(([a-z0-9]|[a-z0-9][a-z0-9\-]*[a-z0-9])\.)*([a-z0-9]|[a-z0-9][a-z0-9\-]*[a-z0-9])$)'
    ConstraintDescription:
      SRA Staging S3 bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).
    Description:
      SRA Staging S3 bucket name for the artifacts relevant to solution. (e.g., lambda zips, CloudFormation templates) S3 bucket name can include
      numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).
    Type: String

Conditions:
  cUseKmsKey: !Not [!Equals [!Ref pLambdaLogGroupKmsKey, '']]
  cCreateLambdaLogGroup: !Equals [!Ref pCreateLambdaLogGroup, 'true']
  cUseGraviton: !Or
    - !Equals [!Ref 'AWS::Region', ap-northeast-1]
    - !Equals [!Ref 'AWS::Region', ap-south-1]
    - !Equals [!Ref 'AWS::Region', ap-southeast-1]
    - !Equals [!Ref 'AWS::Region', ap-southeast-2]
    - !Equals [!Ref 'AWS::Region', eu-central-1]
    - !Equals [!Ref 'AWS::Region', eu-west-1]
    - !Equals [!Ref 'AWS::Region', eu-west-2]
    - !Equals [!Ref 'AWS::Region', us-east-1]
    - !Equals [!Ref 'AWS::Region', us-east-2]
    - !Equals [!Ref 'AWS::Region', us-west-2]

Resources:
  rControlTowerLifeCycleRule:
    Type: AWS::Events::Rule
    Properties:
      Name: !Ref pControlTowerLifeCycleRuleName
      Description: SRA S3 Block Account Public Access Life Cycle Trigger
      EventPattern:
        source:
          - aws.controltower
        detail-type:
          - AWS Service Event via CloudTrail
        detail:
          eventName:
            - CreateManagedAccount
      State: ENABLED
      Targets:
        - Arn: !GetAtt rS3BlockAccountPublicAccessLambdaFunction.Arn
          Id: !Ref pS3BlockAccountPublicAccessLambdaFunctionName

  rPermissionForControlTowerRuleToInvokeLambda:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt rS3BlockAccountPublicAccessLambdaFunction.Arn
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt rControlTowerLifeCycleRule.Arn

  rS3BlockAccountPublicAccessLambdaCustomResource:
    Type: Custom::LambdaCustomResource
    Version: '1.0'
    Properties:
      ServiceToken: !GetAtt rS3BlockAccountPublicAccessLambdaFunction.Arn
      ENABLE_BLOCK_PUBLIC_ACLS: !Ref pEnableBlockPublicAcls
      ENABLE_IGNORE_PUBLIC_ACLS: !Ref pEnableIgnorePublicAcls
      ENABLE_BLOCK_PUBLIC_POLICY: !Ref pEnableBlockPublicPolicy
      ENABLE_RESTRICT_PUBLIC_BUCKETS: !Ref pEnableRestrictPublicBuckets
      ROLE_SESSION_NAME: sra-s3-block-account-public-access
      ROLE_TO_ASSUME: !Ref pS3BlockAccountPublicAccessRoleName

  rS3BlockAccountPublicAccessLambdaFunction:
    Type: AWS::Lambda::Function
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W58
            reason: Lambda role provides access to CloudWatch Logs
          - id: W89
            reason: Lambda does not need to communicate with VPC resources.
          - id: W92
            reason: Lambda does not need reserved concurrent executions.
      checkov:
        skip:
          - id: CKV_AWS_116
            comment: No DLQ added.
          - id: CKV_AWS_173
            comment: Environment variables are not sensitive.
    Properties:
      FunctionName: !Ref pS3BlockAccountPublicAccessLambdaFunctionName
      Description: SRA Solution to update the S3 account level public access block settings
      Architectures: !If
        - cUseGraviton
        - [arm64]
        - !Ref AWS::NoValue
      Handler: app.lambda_handler
      Role: !GetAtt rS3BlockAccountPublicAccessLambdaRole.Arn
      Runtime: python3.9
      MemorySize: 1024
      Timeout: 900
      Code:
        S3Bucket: !Ref pSRAStagingS3BucketName
        S3Key: !Sub ${pSRASolutionName}/lambda_code/${pSRASolutionName}.zip
      Environment:
        Variables:
          LOG_LEVEL: !Ref pLambdaLogLevel
          SSM_PARAMETER_PREFIX: !Ref pSRASSMParameterPrefix
      Tags:
        - Key: sra-solution
          Value: !Ref pSRASolutionName

  rLambdaLogGroup:
    Condition: cCreateLambdaLogGroup
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      LogGroupName: !Sub /aws/lambda/${pS3BlockAccountPublicAccessLambdaFunctionName}
      KmsKeyId: !If
        - cUseKmsKey
        - !Ref pLambdaLogGroupKmsKey
        - !Ref AWS::NoValue
      RetentionInDays: !Ref pLambdaLogGroupRetention

  rS3BlockAccountPublicAccessLambdaRole:
    Type: AWS::IAM::Role
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W11
            reason: The Organizations actions require wildcard in the resource.
          - id: W28
            reason: Explicit name provided
    Properties:
      RoleName: !Ref pS3BlockAccountPublicAccessLambdaRoleName
      Description: !Sub SRA IAM role for '${pS3BlockAccountPublicAccessLambdaFunctionName}' Lambda function
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
      Tags:
        - Key: sra-solution
          Value: !Ref pSRASolutionName
      Policies:
        - PolicyName: s3-block-account-public-access-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: CreateLogStreamAndEvents
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${pS3BlockAccountPublicAccessLambdaFunctionName}:log-stream:*

              - Sid: AssumeRole
                Effect: Allow
                Action: sts:AssumeRole
                Resource: !Sub arn:${AWS::Partition}:iam::*:role/${pS3BlockAccountPublicAccessRoleName}
                Condition:
                  StringEquals:
                    aws:PrincipalOrgId: !Ref pOrganizationId

              - Sid: Organizations
                Effect: Allow
                Action: organizations:ListAccounts
                Resource: '*'

              - Sid: SSM
                Effect: Allow
                Action:
                  - ssm:DeleteParameter
                  - ssm:GetParameter
                  - ssm:PutParameter
                Resource: !Sub arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter${pSRASSMParameterPrefix}*

Outputs:
  oControlTowerLifeCycleRule:
    Description: SRA Control Tower Life Cycle Rule ARN
    Value: !GetAtt rControlTowerLifeCycleRule.Arn

  oS3BlockAccountPublicAccessLambdaFunctionArn:
    Description: SRA S3 Block Account Public Access Lambda Function ARN
    Value: !GetAtt rS3BlockAccountPublicAccessLambdaFunction.Arn

  oS3BlockAccountPublicAccessLambdaLogGroupArn:
    Condition: cCreateLambdaLogGroup
    Description: SRA S3 Block Account Public Access Lambda Log Group ARN
    Value: !GetAtt rLambdaLogGroup.Arn

  oS3BlockAccountPublicAccessLambdaRoleArn:
    Description: SRA S3 Block Account Public Access Lambda Role ARN
    Value: !GetAtt rS3BlockAccountPublicAccessLambdaRole.Arn
