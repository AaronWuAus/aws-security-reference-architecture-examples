AWSTemplateFormatVersion: 2010-09-09
Description: Create a S3 logging bucket in the logging account.

Parameters:
  SSEAlgorithm:
    Type: 'String'
    Default: 'AES256'
    Description: S3 bucket SSE Algorithm.
    AllowedValues:
    - 'AES256'
    - 'aws:kms'
  KMSMasterKeyID:
    Type: 'String'
    Description: 'KMS key ID required if SSE algorithm is aws:kms.'
  AWSLogsS3KeyPrefix:
    Type: 'String'
    Description: 'Organization ID to use as the S3 Key prefix for storing the audit logs'

  pOrganizationId:
    Type: String
    Description: AWS Organizations ID for the Landing Zone.
    MinLength: 12
    MaxLength: 12
    AllowedPattern: '^[o][\-][a-z0-9]{10}$'
    ConstraintDescription: >
      The Org Id must be a 12 character string starting with o- and followed by 10 lower case alphanumeric characters

Conditions:
  UseKMS: !Equals
    - !Ref SSEAlgorithm
    - 'aws:kms'
  UseAES256: !Equals
    - !Ref SSEAlgorithm
    - 'AES256'

Resources:

  S3KmsBucket:
    DeletionPolicy: Retain
    Condition: UseKMS
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub aws-landing-zone-logs-${AWS::AccountId}-${AWS::Region}
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              KMSMasterKeyID: !Ref KMSMasterKeyID
              SSEAlgorithm: !Ref SSEAlgorithm
      PublicAccessBlockConfiguration:
        BlockPublicAcls: True
        BlockPublicPolicy: True
        IgnorePublicAcls: True
        RestrictPublicBuckets: True

  S3KmsBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Condition: UseKMS
    Properties:
      Bucket: !Ref S3KmsBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: SecureTransport
            Effect: Deny
            Principal: "*"
            Action: "s3:*"
            Resource:
              - !Sub arn:aws:s3:::${S3KmsBucket}
              - !Sub arn:aws:s3:::${S3KmsBucket}/*
            Condition:
              Bool:
                "aws:SecureTransport": "false"

          - Sid: DenyExternalPrincipals
            Effect: Deny
            Principal: "*"
            Action: "s3:*"
            Resource: 
              - !Sub arn:aws:s3:::${S3KmsBucket}
              - !Sub arn:aws:s3:::${S3KmsBucket}/*
            Condition:
              StringNotEquals:
                aws:PrincipalOrgID: !Ref pOrganizationId
              
              ForAnyValue:StringNotEquals:
                aws:CalledVia: [
                  cloudtrail.amazonaws.com,
                  config.amazonaws.com
                ]
              

          - Sid: AWSBucketPermissionsCheck
            Effect: Allow
            Principal:
              Service:
                - cloudtrail.amazonaws.com
                - config.amazonaws.com
            Action: 
              - s3:GetBucketAcl
              - s3:GetBucketLocation
              - s3:ListBucket
            Resource:
              - !Sub "arn:aws:s3:::${S3KmsBucket}"

          - Sid: AWSBucketDelivery
            Effect: Allow
            Principal:
              Service:
                - cloudtrail.amazonaws.com
                - config.amazonaws.com
            Action: s3:PutObject
            Resource: 
              - !Sub arn:aws:s3:::${S3KmsBucket}/CloudTrail/AWSLogs/*
              - !Sub arn:aws:s3:::${S3KmsBucket}/Config/AWSLogs/*
              - !Sub arn:aws:s3:::${S3KmsBucket}/*
            Condition:
              StringEquals:
                "s3:x-amz-acl": "bucket-owner-full-control"


  S3Bucket:
    DeletionPolicy: Retain
    Condition: UseAES256
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub aws-landing-zone-logs-${AWS::AccountId}-${AWS::Region}
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: !Ref SSEAlgorithm
      PublicAccessBlockConfiguration:
        BlockPublicAcls: True
        BlockPublicPolicy: True
        IgnorePublicAcls: True
        RestrictPublicBuckets: True
        
  S3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Condition: UseAES256
    Properties:
      Bucket: !Ref S3Bucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:

          - Sid: SecureTransport
            Effect: Deny
            Principal: "*"
            Action: "s3:*"
            Resource:
              - !Sub arn:aws:s3:::${S3Bucket}
              - !Sub "arn:aws:s3:::${S3Bucket}/*"
            Condition:
              Bool:
                "aws:SecureTransport": "false"

          - Sid: DenyExternalPrincipals
            Effect: Deny
            Principal: "*"
            Action: "s3:*"
            Resource: 
              - !Sub arn:aws:s3:::${S3KmsBucket}
              - !Sub arn:aws:s3:::${S3KmsBucket}/*
            Condition:
              StringNotEquals:
                aws:PrincipalOrgID: !Ref pOrganizationId
              
              ForAnyValue:StringNotEquals:
                aws:CalledVia: [
                  cloudtrail.amazonaws.com,
                  config.amazonaws.com,
                  guardduty.amazonaws.com
                ]

          - Sid: AWSBucketPermissionsCheck
            Effect: Allow
            Principal:
              Service:
                - cloudtrail.amazonaws.com
                - config.amazonaws.com
                - guardduty.amazonaws.com
            Action: 
              - s3:GetBucketAcl
              - s3:GetBucketLocation
              - s3:ListBucket
            Resource: !Sub arn:aws:s3:::${S3Bucket}

          - Sid: AWSBucketDelivery
            Effect: Allow
            Principal:
              Service:
                - cloudtrail.amazonaws.com
                - config.amazonaws.com
                - guardduty.amazonaws.com
            Action: s3:PutObject
            Resource: 
              - !Sub arn:aws:s3:::${S3Bucket}/CloudTrail/AWSLogs/*
              - !Sub arn:aws:s3:::${S3Bucket}/Config/AWSLogs/*
              - !Sub arn:aws:s3:::${S3Bucket}/GuardDuty/AWSLogs/*
              - !Sub arn:aws:s3:::${S3Bucket}/*
            Condition: 
              StringEquals:
                s3:x-amz-acl: bucket-owner-full-control

Outputs:
  BucketName:
    Description: AWS Landing Zone logging bucket name
    Value: !If [UseAES256, !Ref S3Bucket, !Ref S3KmsBucket]
    
  AuditLogsS3KeyPrefix:
    Description: S3 Key prefix for storing the audit logs
    Value: !Ref AWSLogsS3KeyPrefix